DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Mercury') THEN
        CREATE SCHEMA "Mercury";
    END IF;
END $EF$;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Person') THEN
        CREATE SCHEMA "Person";
    END IF;
END $EF$;


CREATE TABLE "Mercury"."AddressType" (
    "AddressTypeID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" character varying(1) NOT NULL,
    "Name" character varying(30) NOT NULL,
    "SortKey" integer NULL,
    CONSTRAINT "PK_AddressType" PRIMARY KEY ("AddressTypeID")
);


CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);


CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);


CREATE TABLE "Mercury"."EmailType" (
    "EmailTypeID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" character varying(1) NOT NULL,
    "Name" character varying(30) NOT NULL,
    "SortKey" integer NULL,
    CONSTRAINT "PK_EmailType" PRIMARY KEY ("EmailTypeID")
);


CREATE TABLE "Mercury"."PhoneType" (
    "PhoneTypeID" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" character varying(2) NOT NULL,
    "Name" character varying(30) NOT NULL,
    "SortKey" integer NULL,
    CONSTRAINT "PK_PhoneType" PRIMARY KEY ("PhoneTypeID")
);


CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);


CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);


CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" character varying(128) NOT NULL,
    "ProviderKey" character varying(128) NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);


CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);


CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" character varying(128) NOT NULL,
    "Name" character varying(128) NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);


CREATE TABLE "Mercury"."Person" (
    "PersonID" integer GENERATED BY DEFAULT AS IDENTITY,
    "AppUserID" text NULL,
    "Culture" character varying(20) NULL,
    "Title" character varying(80) NULL,
    "LastName" character varying(80) NULL,
    "FirstName" character varying(80) NULL,
    "VatNumber" character varying(20) NULL,
    "Remarks" character varying(200) NULL,
    "AnnualRevenue" numeric NULL,
    CONSTRAINT "PK_Person" PRIMARY KEY ("PersonID"),
    CONSTRAINT "FK_Person_AspNetUsers_AppUserID" FOREIGN KEY ("AppUserID") REFERENCES "AspNetUsers" ("Id")
);


CREATE TABLE "Mercury"."Address" (
    "AddressID" integer GENERATED BY DEFAULT AS IDENTITY,
    "PersonID" integer NOT NULL,
    "AddressTypeID" integer NOT NULL,
    "AddressLine1" character varying(60) NOT NULL,
    "AddressLine2" character varying(60) NOT NULL,
    "AddressLine3" character varying(60) NOT NULL,
    "PostalCode" character varying(20) NOT NULL,
    "City" character varying(50) NOT NULL,
    "Region" character varying(30) NOT NULL,
    "Country" character varying(30) NOT NULL,
    "SortKey" integer NULL,
    "Remarks" character varying(200) NOT NULL,
    "IsDefault" boolean NOT NULL,
    CONSTRAINT "PK_Address" PRIMARY KEY ("AddressID"),
    CONSTRAINT "FK_Address_AddressType_AddressTypeID" FOREIGN KEY ("AddressTypeID") REFERENCES "Mercury"."AddressType" ("AddressTypeID") ON DELETE CASCADE,
    CONSTRAINT "FK_Address_Person_PersonID" FOREIGN KEY ("PersonID") REFERENCES "Mercury"."Person" ("PersonID") ON DELETE CASCADE
);


CREATE TABLE "Mercury"."Email" (
    "EmailID" integer GENERATED BY DEFAULT AS IDENTITY,
    "PersonID" integer NOT NULL,
    "EmailTypeID" integer NOT NULL,
    "EmailAddress" character varying(255) NOT NULL,
    "SortKey" integer NULL,
    "Remarks" character varying(200) NOT NULL,
    "IsDefault" boolean NOT NULL,
    CONSTRAINT "PK_Email" PRIMARY KEY ("EmailID"),
    CONSTRAINT "FK_Email_EmailType_EmailTypeID" FOREIGN KEY ("EmailTypeID") REFERENCES "Mercury"."EmailType" ("EmailTypeID") ON DELETE CASCADE,
    CONSTRAINT "FK_Email_Person_PersonID" FOREIGN KEY ("PersonID") REFERENCES "Mercury"."Person" ("PersonID") ON DELETE CASCADE
);


CREATE TABLE "Mercury"."PersonProfile" (
    "PersonProfileID" integer GENERATED BY DEFAULT AS IDENTITY,
    "PersonID" integer NOT NULL,
    "Photo" bytea NOT NULL,
    "BirthDate" date NULL,
    "Gender" integer NOT NULL,
    CONSTRAINT "PK_PersonProfile" PRIMARY KEY ("PersonProfileID"),
    CONSTRAINT "FK_PersonProfile_Person_PersonID" FOREIGN KEY ("PersonID") REFERENCES "Mercury"."Person" ("PersonID") ON DELETE CASCADE
);


CREATE TABLE "Person"."Phone" (
    "PhoneID" integer GENERATED BY DEFAULT AS IDENTITY,
    "PersonID" integer NOT NULL,
    "PhoneTypeID" integer NOT NULL,
    "PhoneNumber" character varying(30) NOT NULL,
    "SortKey" integer NULL,
    "Remarks" character varying(200) NOT NULL,
    "IsDefault" boolean NOT NULL,
    CONSTRAINT "PK_Phone" PRIMARY KEY ("PhoneID"),
    CONSTRAINT "FK_Phone_Person_PersonID" FOREIGN KEY ("PersonID") REFERENCES "Mercury"."Person" ("PersonID") ON DELETE CASCADE,
    CONSTRAINT "FK_Phone_PhoneType_PhoneTypeID" FOREIGN KEY ("PhoneTypeID") REFERENCES "Mercury"."PhoneType" ("PhoneTypeID") ON DELETE CASCADE
);


CREATE INDEX "IX_Address_AddressTypeID" ON "Mercury"."Address" ("AddressTypeID");


CREATE INDEX "IX_Address_PersonID" ON "Mercury"."Address" ("PersonID");


CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");


CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");


CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");


CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");


CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");


CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");


CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");


CREATE INDEX "IX_Email_EmailTypeID" ON "Mercury"."Email" ("EmailTypeID");


CREATE INDEX "IX_Email_PersonID" ON "Mercury"."Email" ("PersonID");


CREATE INDEX "IX_Person_AppUserID" ON "Mercury"."Person" ("AppUserID");


CREATE INDEX "IX_PersonProfile_PersonID" ON "Mercury"."PersonProfile" ("PersonID");


CREATE INDEX "IX_Phone_PersonID" ON "Person"."Phone" ("PersonID");


CREATE INDEX "IX_Phone_PhoneTypeID" ON "Person"."Phone" ("PhoneTypeID");


