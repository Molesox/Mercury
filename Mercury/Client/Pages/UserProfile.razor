@page "/userprofile"
@using Mercury.Shared.Models.Mercury;
@using Mercury.Shared.Repository;
@using Mercury.Shared.Services;
@inject ICustomAuthenticationStateProvider authStateProvider
@using Mercury.Client.Components


<PageTitle>User profile</PageTitle>
<RadzenText Text="My profile" TextStyle="TextStyle.DisplayH3" />
<RadzenStack>
    <RadzenCard>
        <RadzenStack>
            <RadzenText Text="Select your favourite theme" TextStyle="TextStyle.DisplayH6" />
            <ThemeSelector />
        </RadzenStack>

    </RadzenCard>
    @if (person is not null)
    {

        <PersonCard person=@person />
    }


</RadzenStack>

@code {
    [Inject]
    public PersonManager personManager { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    Person? person { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var userEmail = authState.User.Identity.Name;

        var result = await personManager.Get(new LinqQueryFilter<Person>(p => p.Emails.FirstOrDefault().EmailAddress == userEmail, new List<string>() { nameof(Person.Emails) }));
        person = result.FirstOrDefault();

    }
}
