@page "/AppUser"
@using Mercury.Shared
@using Mercury.Shared.Models;
@using Mercury.Shared.Models.AspNetUser;
@inject UserSearchManager UserSearchManager
@attribute [Authorize]

<PageTitle>Asp Net Users</PageTitle>

<RadzenText Text="Asp Net Users" TextStyle="TextStyle.DisplayH3" />

<RadzenText Text="Main information list" TextStyle="TextStyle.Subtitle1" />

@if (userSearch == null)
{
    <RadzenLabel Text="Loading..." />
}
else
{
    <RadzenRow>
    <RadzenColumn Size="9">
            <RadzenDataGrid AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple"
             AllowVirtualization="true" AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
            AllowFiltering="true" SelectionMode="DataGridSelectionMode.Multiple"
            @ref="grid" Data="@userSearch" TItem="AspNetUser" ColumnWidth="200px">
            <Columns>
                <RadzenDataGridColumn TItem="AspNetUser" Property="Id" Title="User ID" Width="160px" />
                <RadzenDataGridColumn TItem="AspNetUser" Property="UserName" Title="Username" Width="160px" />
                <RadzenDataGridColumn TItem="AspNetUser" Property="Email" Title="Email" Width="200px" />
                <RadzenDataGridColumn TItem="AspNetUser" Property="PhoneNumber" Title="Phone Number" Width="160px" />
                <RadzenDataGridColumn TItem="AspNetUser" Property="LockoutEnabled" Title="Lockout Enabled"
                    Width="160px">
                    <Template Context="user">
                        @(user.LockoutEnabled ? "Yes" : "No")
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="AspNetUser" Property="LockoutEnd" Title="Lockout End" Width="160px">
                        <Template Context="user">
                            @user.LockoutEnd?.ToString("d")
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </RadzenColumn>
        <RadzenColumn Size="3">
            <RadzenStack>
            <RadzenCard>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center"
                    JustifyContent="JustifyContent.Start">

                        <RadzenButton Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Success" Icon="add" />
                        <RadzenButton Variant="Variant.Outlined" Icon="edit" />
                        <RadzenButton Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Danger" Icon="delete" />
                    <RadzenText  TextStyle="TextStyle.Caption" Text="Basic operations" />
                </RadzenStack>
            </RadzenCard>
             <RadzenCard>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center"
                    JustifyContent="JustifyContent.Start">
                        <RadzenButton Size="ButtonSize.Small" Variant="Variant.Outlined" Text="xlsx"/>
                        <RadzenButton Size="ButtonSize.Small" Variant="Variant.Outlined" Text="csv"/>
                        <RadzenButton Size="ButtonSize.Small" Variant="Variant.Outlined" Text="txt"/>
                    <RadzenText  TextStyle="TextStyle.Caption" Text="Exports" />
                </RadzenStack>
            </RadzenCard>

             <RadzenCard>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center"
                    JustifyContent="JustifyContent.Start">
                        <RadzenButton Size="ButtonSize.Small" Variant="Variant.Filled" ButtonStyle="ButtonStyle.Success" Text="Unlock"/>
                        <RadzenButton Size="ButtonSize.Small" Variant="Variant.Filled" ButtonStyle="ButtonStyle.Danger" Text="Lock"/>
                    
                    <RadzenText  TextStyle="TextStyle.Caption" Text="The user access to application" />
                </RadzenStack>
            </RadzenCard>

            </RadzenStack>


        </RadzenColumn>
    </RadzenRow>

}

@code {

    RadzenDataGrid<AspNetUser>? grid;
    IEnumerable<AspNetUser>? userSearch;
    AspNetUser? User;
    string SearchName = "";
    string ErrorMessage = "";

    async Task GetAllUserSearch()
    {
        ErrorMessage = "";
        try
        {
            var result = await UserSearchManager.GetAspNetUsers();
            if (result != null)
            {
                userSearch = result ;
                User = null;
            }
            else
            {
                ErrorMessage = "Could not fetch app users";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetAllUserSearch();
    }
}
