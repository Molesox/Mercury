@page "/register"
@using Mercury.Shared.Identity;
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<RadzenText Text="Register" TextStyle="TextStyle.DisplayH4" />

<RadzenCard>
    <ChildContent>
        <RadzenContent>
            <RadzenText TextStyle="TextStyle.DisplayH5">Please enter your details</RadzenText>
            <RadzenTemplateForm TItem="RegisterModel" data=@RegisterModel @onsubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <RadzenStack>
                    <RadzenFieldset>
                        <RadzenStack>

                            <RadzenFormField Text="Email" Variant="Variant.Filled">
                                <RadzenTextBox @bind-Value="RegisterModel.Email" Name="email" />
                            </RadzenFormField>



                            <RadzenFormField Text="Password" Variant="Variant.Filled">
                                <RadzenPassword @bind-Value="RegisterModel.Password" Name="password"
                                                InputType="password" />
                            </RadzenFormField>



                            <RadzenFormField Text="Confirm password" Variant="Variant.Filled">
                                <RadzenPassword @bind-Value="RegisterModel.ConfirmPassword" Name="confirmPassword"
                                                InputType="password" />
                            </RadzenFormField>
                        </RadzenStack>
                    </RadzenFieldset>

                    <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" />
                </RadzenStack>

            </RadzenTemplateForm>
            @if (ShowErrors)
            {
                @foreach (var error in Errors)
                {
                    <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
                        @error
                    </RadzenAlert>
                }
            }
        </RadzenContent>
    </ChildContent>
</RadzenCard>

@code {
    private RegisterModel RegisterModel = new RegisterModel() { ConfirmPassword = "", Email = "", Password = "" };
    private bool ShowErrors;
    private IEnumerable<string> Errors;

   

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var registrationResult = await AuthService.Register(RegisterModel);


        if (!registrationResult.IsSuccesful)
        {
            SetErrors(registrationResult.Errors);
            return;
        }

        var loginModel = new LoginModel() { Email = RegisterModel.Email, Password = RegisterModel.Password, RememberMe=false };
        var loginResult = await AuthService.Login(loginModel);

        var status = (registrationResult.IsSuccesful, loginResult.IsSuccesful);

        switch (status)
        {
            case (true, true):
                NavigationManager.NavigateTo("/");
                break;
            case (false, _):
                SetErrors(registrationResult.Errors);
                break;
            case (_, false):
                SetErrors(new[] { loginResult.Errors.First()! });
                break;
        }
    }

    private void SetErrors(IEnumerable<string> errors)
    {
        Errors = errors;
        ShowErrors = true;
    }

}

