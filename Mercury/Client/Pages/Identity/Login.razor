@page "/login"
@using Mercury.Shared.Identity;


@inject IJSRuntime JSRuntime
@inject IAuthService AuthService
@inject NavigationManager NavigationManager



<RadzenText Text="Login" TextStyle="TextStyle.DisplayH4" />

<RadzenCard>
    <ChildContent>
        <RadzenContent>
            <RadzenText TextStyle="TextStyle.DisplayH5">Please enter your details</RadzenText>

            <RadzenTemplateForm TItem="LoginModel" Data=loginModel OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <RadzenStack>
                    <RadzenFieldset>
                        <RadzenFormField Text="Email" >
                            <RadzenTextBox @bind-Value="loginModel.Email" Name="email" />
                        </RadzenFormField>
                        <RadzenFormField Text="Password" >
                            <RadzenPassword @bind-Value="loginModel.Password" Name="password" InputType="password" />
                        </RadzenFormField>
                    </RadzenFieldset>

                        <RadzenStack  Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                            <RadzenLabel   Text="Remember me"/>
                            <RadzenSwitch  @bind-bind-Value="loginModel.RememberMe" Name="rememberMe" Value="true"
                                Disabled="false" />
                        </RadzenStack>

                    <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" />
                </RadzenStack>
            </RadzenTemplateForm>

            @if (ShowErrors)
            {
                <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
                    @Error
                </RadzenAlert>

            }
        </RadzenContent>
    </ChildContent>
</RadzenCard>

@code {

    public LoginModel loginModel { get; set; } = new LoginModel() { Email = "", Password = "" };
    private bool ShowErrors;
    private string Error = "";
    protected override void OnInitialized()
    {
        if (true)
        {
            loginModel = new LoginModel() { Email = "mercury@galaxia.ia", Password = "Mgalaxia.ia420" };
        }
        else
        {
            loginModel = new LoginModel() { Email = "", Password = "" };
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("console.log", "Component initialized");
    }

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.IsSuccesful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Errors.FirstOrDefault() ?? "Something bad happened";
            ShowErrors = true;
        }
    }

}
