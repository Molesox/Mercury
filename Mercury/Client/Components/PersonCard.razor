@using Mercury.Shared.Models.Mercury
<RadzenCard>
    <RadzenTemplateForm TItem="Person" Data="@person" Submit="@((Person args) => { Submit(args); })">
        <RadzenStack>

            <RadzenRow Gap="1rem">
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText Text="First name" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox Style="width: 100%;" Name="FirstName" @bind-Value=@person.FirstName />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText Text="Last name" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox Style="width: 100%;" Name="LastName" @bind-Value=@person.LastName />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenRow>
            <RadzenRow Gap="1rem">
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText Text="Email" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox Style="width: 100%;" Name="Email"
                        @bind-Value=@email />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenText Text="Birth date" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDatePicker Style="width: 100%;" Name="BirthDate" @bind-Value=@personProfile.BirthDate />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem"
                         Class="rz-mt-8 rz-mb-4">
                <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
                <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large"
                              Icon="cancel" Text="Cancel" />
            </RadzenStack>
        </RadzenStack>


    </RadzenTemplateForm>
</RadzenCard>


@code {
    [Inject]
    public PersonManager personManager { get; set; }

    [Parameter]
    public Person person { get; set; } = new Person();

    PersonProfile personProfile
    {
        get
        {
            if (person.PersonProfiles.Any())
            {
                return person.PersonProfiles.First();
            }
            else
            {
                person.PersonProfiles.Add(new PersonProfile());
                return person.PersonProfiles.First();
            }
        }
    }
    string email
    {
        get
        {
            if (person.Emails.Any())
            {
                return person.Emails.First().EmailAddress;
            }
            return "";
        }
        set
        {
            if (person.Emails.Any())
            {
                person.Emails.First().EmailAddress = value;
            }
            else
            {
                person.Emails.Add(new Email { EmailAddress = value });
            }
        }
    }
    public async void Submit(Person person)
    {
        await personManager.Update(person);
        StateHasChanged();
    }


}