@typeparam TypeItem
@if (Data is not null)
{
    <RadzenDataGrid AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.SimpleWithMenu"
    AllowVirtualization="true" AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
    AllowFiltering="true" SelectionMode="DataGridSelectionMode.Multiple" 
    @ref="dataGrid" Data="@Data" TItem="TypeItem" ColumnWidth="200px">
    <Columns>
        @if (Data is not null)
            {
                var properties = typeof(TypeItem).GetProperties()
                .Where(p => p.CustomAttributes.Any(a => a.AttributeType == typeof(VisibleAttribute)));

                foreach (var prop in properties)
                {
                    <RadzenDataGridColumn TItem="TypeItem" Property="@prop.Name" Title="@prop.Name" Width="160px" />
                }
            }
        </Columns>
        <EmptyTemplate>
            <RadzenText style="font-size: 24px; text-align: center; margin: 2rem;">No records to display.</RadzenText>
        </EmptyTemplate>
    </RadzenDataGrid>
}
@code {

    [Parameter]
    public IEnumerable<TypeItem>? Data { get; set; }

    RadzenDataGrid<TypeItem>? dataGrid;

}